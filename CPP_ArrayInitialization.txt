C++数组定义与初始化
int a1[3]={1,2,3};
int a2[3][4]={1,2,3,4,5,6,7,8,9,10,11,12};
	
int b1[]={1,2,3};                         //为什么这样可以？
int b2[][]={1,2,3,4,5,6,7,8,9,10,11,12};  //这样就不可以？

int *p1=new int[3];		//为什么这样可以？
int *p2=new int[3][4];	 //这样就不可以？

解答
int b1[] = {1,2,3}是合法的，系统会自动给数组b1分配3个整型数的空间大小，因为它是一维数组，大小可以由后面确定。
int b2[][]={1,2,3,4,5,6,7,8,9,10,11,12};  它是二维数组，我们至少需要定义它的最高维的大小。
也就是至少是b2[][4],想想你什么都没定义，我怎么通过后面的赋值来判断b2数组是几行几列呢？
最后两组是指针，相信看看指针就会知道，指针是指向内存的地址，第一个指针p1是指向一维数组的指针，大小也是由后面确定的。
相当于int p1[] = {,,}指针初始化时值为空。第二个应该是指向二维数组的指针，但这样定义肯定是不对的，
因为你还是把它当一维来看，正确的应该是int （*p2）[4] = new int[3][4] 或者int** p2 = new int[3][4]。